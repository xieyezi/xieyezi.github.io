import{_ as n,c as s,o as a,a as t}from"./app.c6951d47.js";const d='{"title":"ES6 20\u4E2A\u7ECF\u5E38\u4F7F\u7528\u7684\u6280\u5DE7","description":"","frontmatter":{"title":"ES6 20\u4E2A\u7ECF\u5E38\u4F7F\u7528\u7684\u6280\u5DE7","tags":["es6","javascript"]},"headers":[],"relativePath":"article/ES6-20\u4E2A\u7ECF\u5E38\u4F7F\u7528\u7684\u6280\u5DE7.md"}',p={},o=t(`<h1 id="es6-20-\u4E2A\u7ECF\u5E38\u4F7F\u7528\u7684\u6280\u5DE7" tabindex="-1">ES6 20 \u4E2A\u7ECF\u5E38\u4F7F\u7528\u7684\u6280\u5DE7 <a class="header-anchor" href="#es6-20-\u4E2A\u7ECF\u5E38\u4F7F\u7528\u7684\u6280\u5DE7" aria-hidden="true">#</a></h1><ol><li>\u6253\u4E71\u6570\u7EC4\u987A\u5E8F</li></ol><div class="language-js"><pre><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;\u{1F604}&quot;</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token string">&quot;55&quot;</span><span class="token punctuation">]</span>
arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">0.5</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
<span class="token comment">// [ &#39;\u{1F604}&#39;, &#39;55&#39;, 67, false, true ]</span>
</code></pre></div><ol start="2"><li>\u5220\u9664\u6570\u5B57\u4E4B\u5916\u7684\u6240\u6709\u5B57\u7B26</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&quot;xieyezi 23213 is 95994 so hansome 223333&quot;</span>
<span class="token keyword">const</span> numbers <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\D</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span>
<span class="token comment">// 2321395994223333</span>
</code></pre></div><ol start="3"><li>\u53CD\u8F6C\u5B57\u7B26\u4E32\u6216\u8005\u5355\u8BCD</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> sentence <span class="token operator">=</span> <span class="token string">&quot;xieyezi js so handsome, lol.&quot;</span>
<span class="token keyword">const</span> reverseSentence <span class="token operator">=</span> <span class="token function">reverseBySeparator</span><span class="token punctuation">(</span>sentence<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reverseSentence<span class="token punctuation">)</span>
<span class="token comment">// .lol ,emosdnah os sj izeyeix</span>

<span class="token keyword">const</span> reverseEachWord <span class="token operator">=</span> <span class="token function">reverseBySeparator</span><span class="token punctuation">(</span>reverseSentence<span class="token punctuation">,</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reverseEachWord<span class="token punctuation">)</span>
<span class="token comment">// izeyeix sj os ,emosdnah .lol</span>

<span class="token keyword">function</span> <span class="token function">reverseBySeparator</span><span class="token punctuation">(</span><span class="token parameter">string<span class="token punctuation">,</span> separator</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>separator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>separator<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><ol start="4"><li>\u5C06\u5341\u8FDB\u5236\u8F6C\u6362\u4E3A\u4E8C\u8FDB\u5236\u6587\u4EF6\u6216\u5341\u516D\u8FDB\u5236\u6570</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">45</span>
num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
num<span class="token punctuation">.</span><span class="token function">tostring</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
</code></pre></div><ol start="5"><li>\u5408\u5E76\u591A\u4E2A\u5BF9\u8C61</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> city <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Chongqing&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">population</span><span class="token operator">:</span> <span class="token string">&quot;1,234,567,890&quot;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> location <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">longitude</span><span class="token operator">:</span> <span class="token string">&quot;116.4&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">latitude</span><span class="token operator">:</span> <span class="token string">&quot;39.9&quot;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> fullCity <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>city<span class="token punctuation">,</span> <span class="token operator">...</span>location <span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fullCity<span class="token punctuation">)</span>
<span class="token comment">// {</span>
<span class="token comment">//   name: &#39;Chongqing&#39;,</span>
<span class="token comment">//   population: &#39;1,234,567,890&#39;,</span>
<span class="token comment">//   longitude: &#39;116.4&#39;,</span>
<span class="token comment">//   latitude: &#39;39.9&#39;</span>
<span class="token comment">// }</span>
</code></pre></div><ol start="6"><li><code>===</code> \u548C <code>==</code> \u7684\u533A\u522B</li></ol><div class="language-js"><pre><code><span class="token comment">// ==   -&gt;  \u7C7B\u578B\u8F6C\u6362 (\u6D45\u6BD4\u8F83)</span>
<span class="token comment">// ===  -&gt;  \u65E0\u7C7B\u578B\u8F6C\u6362 (\u4E25\u683C\u6BD4\u8F83)</span>

<span class="token number">0</span> <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token comment">// true</span>
<span class="token number">0</span> <span class="token operator">===</span> <span class="token boolean">false</span> <span class="token comment">// false</span>
<span class="token number">1</span> <span class="token operator">==</span> <span class="token string">&quot;1&quot;</span> <span class="token comment">// true</span>
<span class="token number">1</span> <span class="token operator">===</span> <span class="token string">&quot;1&quot;</span> <span class="token comment">// false</span>
<span class="token keyword">null</span> <span class="token operator">==</span> <span class="token keyword">undefined</span> <span class="token comment">// true</span>
<span class="token keyword">null</span> <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token comment">// false</span>
</code></pre></div><ol start="7"><li>\u89E3\u6784\u8D4B\u503C</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> forest <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">location</span><span class="token operator">:</span> <span class="token string">&quot;Sweden&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">animals</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  <span class="token literal-property property">animalsTypes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Lions&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Tigers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Bears&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> location<span class="token punctuation">,</span> animals<span class="token punctuation">,</span> animalsTypes <span class="token punctuation">}</span> <span class="token operator">=</span> forest
<span class="token keyword">const</span> <span class="token punctuation">[</span>lions<span class="token punctuation">,</span> tigers<span class="token punctuation">,</span> bears<span class="token punctuation">]</span> <span class="token operator">=</span> animalsTypes

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span> <span class="token comment">// Sweden</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span> <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lions<span class="token punctuation">)</span> <span class="token comment">// Lions</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tigers<span class="token punctuation">)</span> <span class="token comment">// Tigers</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bears<span class="token punctuation">)</span> <span class="token comment">// Bears</span>
</code></pre></div><ol start="8"><li>\u4EA4\u6362\u53D8\u91CF\u7684\u503C</li></ol><div class="language-js"><pre><code><span class="token keyword">let</span> bears <span class="token operator">=</span> <span class="token string">&quot;bears&quot;</span>
<span class="token keyword">let</span> tigers <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&quot;tigers&quot;</span><span class="token punctuation">[</span><span class="token punctuation">(</span>bears<span class="token punctuation">,</span> tigers<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>tigers<span class="token punctuation">,</span> bears<span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bears<span class="token punctuation">)</span> <span class="token comment">// tigers</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>tribes<span class="token punctuation">)</span> <span class="token comment">// bears</span>
</code></pre></div><ol start="9"><li>1.\u5224\u65AD\u56DE\u6587\u5B57\u7B26\u4E32</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">isRevervse</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str1<span class="token punctuation">,</span> str2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">normalize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token string">&quot;NFD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">normalize</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span> <span class="token operator">===</span> str2
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isRevervse</span><span class="token punctuation">(</span><span class="token string">&quot;anagram&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;margana&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isRevervse</span><span class="token punctuation">(</span><span class="token string">&quot;rac&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;car&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><blockquote><p>\u56DE\u6587\u5B57\u7B26\u4E32: \u6B63\u7740\u5199\u548C\u53CD\u7740\u5199\u90FD\u4E00\u6837\u7684\u5B57\u7B26\u4E32 (\u7279\u522B\u611F\u8C22<a href="https://juejin.cn/user/3998255455678968" target="_blank" rel="noopener noreferrer">@\u6D6E\u751F\u9601\u9601\u4E3B</a>\u52D8\u8BEF) 9. 2.\u5224\u65AD\u4E24\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u4E3A\u4E92\u76F8\u6392\u5217</p></blockquote><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">isAnagram</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str1<span class="token punctuation">,</span> str2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">normalize</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token string">&quot;NFD&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">normalize</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">normalize</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isAnagram</span><span class="token punctuation">(</span><span class="token string">&quot;anagram&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;nagaram&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isAnagram</span><span class="token punctuation">(</span><span class="token string">&quot;rat&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;car&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isAnagram</span><span class="token punctuation">(</span><span class="token string">&quot;heArT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;traEH&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><blockquote><p>\u5224\u65AD\u4E24\u4E2A\u5B57\u7B26\u4E32\u662F\u5426\u4E3A\u4E92\u76F8\u6392\u5217: \u7ED9\u5B9A\u4E24\u4E2A\u5B57\u7B26\u4E32,\u4E00\u4E2A\u662F\u5426\u662F\u53E6\u4E00\u4E2A\u7684\u6392\u5217 10. \u53EF\u9009\u94FE\u64CD\u4F5C\u7B26</p></blockquote><div class="language-js"><pre><code><span class="token keyword">const</span> player <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;xieyezi&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rating</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
  <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;click&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">pass</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">teammate</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Pass to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>teammate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>player<span class="token operator">?.</span>name<span class="token punctuation">)</span> <span class="token comment">// xieyezi</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>player<span class="token operator">?.</span>click<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// click</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>player<span class="token operator">?.</span>teammate<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
</code></pre></div><ol start="11"><li>\u4E09\u76EE\u8FD0\u7B97\u7B26</li></ol><div class="language-js"><pre><code><span class="token comment">// condition ? expression if true : expression if false</span>
<span class="token keyword">const</span> oxygen <span class="token operator">=</span> <span class="token number">10</span>
<span class="token keyword">const</span> diver <span class="token operator">=</span> oxygen <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">&quot;Low oxygen&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;High oxygen&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>diver<span class="token punctuation">)</span> <span class="token comment">// High oxygen</span>
</code></pre></div><ol start="12"><li>\u4ECE\u6570\u7EC4\u4E2D\u968F\u673A\u9009\u62E9\u4E00\u4E2A\u503C</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> elements <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">,</span> <span class="token string">&quot;You&quot;</span><span class="token punctuation">,</span> <span class="token number">777</span><span class="token punctuation">,</span> <span class="token string">&quot;breaking&quot;</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">&quot;full&quot;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> <span class="token function-variable function">random</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> arr<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> randomElement <span class="token operator">=</span> <span class="token function">random</span><span class="token punctuation">(</span>elements<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>randomElement<span class="token punctuation">)</span> <span class="token comment">// 777</span>
</code></pre></div><ol start="13"><li>\u51BB\u7ED3\u5BF9\u8C61</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> octopus <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">tentacles</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&quot;blue&quot;</span>
<span class="token punctuation">}</span>
Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span>octopus<span class="token punctuation">)</span>
octopus<span class="token punctuation">.</span>tentacles <span class="token operator">=</span> <span class="token number">10</span> <span class="token comment">// Error, \u4E0D\u4F1A\u6539\u53D8</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>octopus<span class="token punctuation">)</span> <span class="token comment">// { tentacles: 8, color: &#39;blue&#39;}</span>
</code></pre></div><ol start="14"><li>\u5220\u9664\u6570\u7EC4\u91CD\u590D\u7684\u5143\u7D20</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> animals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;bears&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lions&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tigers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bears&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lions&quot;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">unique</span><span class="token punctuation">(</span>animals<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [ &#39;bears&#39;, &#39;lions&#39;, &#39;tigers&#39; ]</span>
</code></pre></div><ol start="15"><li>\u4FDD\u7559\u6307\u5B9A\u4F4D\u5C0F\u6570</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token number">0.123456789</span>
<span class="token keyword">const</span> fixed2 <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> fixed3 <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fixed2<span class="token punctuation">)</span> <span class="token comment">// 0.12</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fixed3<span class="token punctuation">)</span> <span class="token comment">// 0.123</span>
</code></pre></div><ol start="16"><li>\u6E05\u7A7A\u6570\u7EC4</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
numbers<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span> <span class="token comment">// []</span>
</code></pre></div><ol start="17"><li>\u4ECE <code>RGB</code> \u8F6C\u6362\u4E3A <code>HEX</code></li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">rgbToHex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">toHex</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> hex <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> hex<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">0</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> hex
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">toHex</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">toHex</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">toHex</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">rgbToHex</span><span class="token punctuation">(</span><span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// #2e2043</span>
</code></pre></div><ol start="18"><li>\u4ECE\u6570\u7EC4\u4E2D\u83B7\u53D6\u6700\u5927\u503C\u548C\u6700\u5C0F\u503C</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">45</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>nums<span class="token punctuation">)</span>
<span class="token keyword">const</span> min <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>nums<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span> <span class="token comment">// 99</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>min<span class="token punctuation">)</span> <span class="token comment">// -45</span>
</code></pre></div><ol start="19"><li>\u7A7A\u503C\u5408\u5E76\u8FD0\u7B97\u7B26</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> nullval <span class="token operator">=</span> <span class="token keyword">null</span>
cost emptyString <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
<span class="token keyword">const</span> someNum <span class="token operator">=</span> <span class="token number">13</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> nullval <span class="token operator">??</span> <span class="token string">&#39;A default&#39;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> emptyString <span class="token operator">??</span> <span class="token string">&#39;B default&#39;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> SomeNum <span class="token operator">??</span> <span class="token string">&#39;C default&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// A default</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// &#39;&#39; // empty string != undefined or null</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token comment">// 13</span>
</code></pre></div><ol start="20"><li>\u8FC7\u6EE4\u6570\u7EC4\u4E2D\u503C\u4E3A <code>false</code> \u7684\u503C</li></ol><div class="language-js"><pre><code><span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> truthyNums <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>truthyNums<span class="token punctuation">)</span> <span class="token comment">// [1]</span>
</code></pre></div>`,43),e=[o];function c(l,u,k,i,r,m){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{d as __pageData,f as default};
